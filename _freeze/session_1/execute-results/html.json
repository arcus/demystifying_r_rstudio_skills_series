{
  "hash": "7571a067f4215796cd73a722e1c9c25a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: \n  revealjs:\n    theme: [serif, custom.scss]\n    scrollable: true\n    logo: media/chop_arcus_initiative_logo.png\n    footer: Arcus Education, Children's Hospital of Philadelphia \n    css: styles.css\n---\n\n\n\n## Welcome {.smaller}\n\nThese slides available at: <https://arcus.github.io/demystifying_r_rstudio_skills_series/session_1.html>\n\n-   Use keyboard arrow keys to\n    -   advance ( → ) and\n    -   go back ( ← )\n-   Type \"s\" to see speaker notes\n-   Type \"?\" to see other keyboard shortcuts\n\n::: notes\nAs we prepare to get started, I'd like to encourage you to open these slides on your own browser, so you will have them available to refer to later.  There are also a number of links you may want to click on.  I'll copy paste that URL, where the slide deck is located, into chat, so everyone has it.\n\nThis first slide is just to help you navigate this slide deck if you look at these slides on your own!  And yes, there are ample speaker notes, so if you missed something I said, chances are it's going to be in the speaker notes of the slide.\n:::\n\n\n## About Arcus / Your Presenter {.smaller}\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"60%\"}\n\nArcus is an initiative by the Research Institute aimed at promoting data discovery and reuse and increasing research reproducibility. \n\n* Arcus app: <https://arcus.chop.edu>\n* Arcus Sharepoint site: <https://chop365.sharepoint.com/sites/Arcus>\n\nAmong the many teams in Arcus, I represent Arcus Education!\n\n![](media/arcus_website.png){.two-thirds .bordered}\n:::\n\n::: {.column .small-text width=\"40%\"}\n![](media/arcus_research_data_lifecycle.png)\n:::\n\n:::\n\n::: notes\n\nThanks again for joining us, and welcome to our session today!  I'd like to begin by briefly introducing myself and introducing Arcus, for those of you who may not be familiar with us.  My name is ______ [add pronouns here if you want], and I'll be leading today's session.\n\nArcus is an initiative by the Research Institute aimed at promoting data discovery and reuse and increasing research reproducibility throughout the research lifecycle, as you can see in the graphic on the right.  [Pause, give folks a few secs to peruse the image].\n\nChanging the paradigm of research is a big undertaking, and it requires a broad approach.\n\nWe aim to improve data reuse and research reproducibility at CHOP through technology, including Arcus labs and applied data science, through the use of data archiving and cataloging, and by way of education.  \n\nYou can find out more by checking out the Arcus application website (please note, there are some pre-requisites to using the app, such as human subjects protection training and signing our terms of use).  I've added just a very small screenshot of part of what the Arcus application website looks like on the slide on the left side. [Pause].\n\nYou can also, without any prerequisites, look at our Arcus Sharepoint site, which has a calendar of events and lots more information about Arcus.\n\nAnd finally, a little more about me: I work in Arcus Education.  Our role is to support CHOP scientists by helping researchers acquire data science skills.  That's why we have Skills Series like this one!\n\n:::\n\n## Arcus Education\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"50%\"}\n![](media/arcus_education_page.png){.bordered}\n:::\n\n\n::: {.column .small-text width=\"50%\"}\nArcus education provides data science training to researchers ...\n\n(and often this is useful to non-researchers too!).\n\n<https://arcus.chop.edu/i-want-to/arcus-education>\n\nEmail us! <arcus-education@chop.edu>\n:::\n:::\n\n::: notes\n\nThe Arcus Education team does lots of different kinds of education.  We work one on one with researchers in office hours, we write how-to guides to help people understand how to use Arcus tools, we create asynchronous modules that people can use to acquire skills in their own time, and we do synchronous events like this one.  \n\nSometimes we focus on Arcus customers, on researchers at CHOP who are doing research within the Arcus data sharing paradigm, and sometimes we broaden our reach to larger audiences, because we know that helping everyone acquire data science skills will help improve the conduct of science at CHOP and help build a data-driven workforce.  \n\nPlease check out that education page and find out more about some of our services.  You can see I've added a screenshot of that page to the slide here on the left side.  You can also email us at arcus dash education at chop dot edu.\n:::\n\n## Demystifying R and RStudio {.smaller}\n\nArcus Education provides \"Skills Series\" for the entire CHOP community.\n\nThis Skills Series is a short, 2-session series aimed at Demystifying R and RStudio!\n\n* Session 1: Introduction to R/RStudio\n* Session 2: Introduction to Literate Statistical Programming\n\n::: notes\n\nOne of our methods in Education is the Skills Series, and that's what you're in today.\n\nIn this series, we're going to take just two sessions to help demystify R and RStudio.  If you have heard people talk about these concepts and you have only a vague idea what they are, and want to know more, without having to actually download anything or write code, at least not yet, this is the right series for you. \n\nAfter you finish these two sessions, you'll understand what R is, what RStudio is, why people use these tools, and next steps for getting access to them and using them, if you want.\n\n:::\n\n\n## Session 1 Itinerary {.smaller}\n\nIntroduction to R/RStudio \n\n  * R is a programming language created for statistical data analysis\n  * Why scripts?  Reproducibility and open source data science\n  * RStudio is one way to work with R\n  * Considerations for working with R and RStudio at CHOP\n  * Posit.Cloud\n  \nGoals:\n\n* Be able to describe the difference between R and RStudio\n* Be able to give one advantage for using scripts written in R for data analysis\n* Have a concrete next step for obtaining access to R and RStudio at CHOP\n\n::: notes\nSo let's get started with this first session. In this session we're going to cover an introduction to R and RStudio.\n\nWe'll go over what R is, and why people use it.\n\nWe'll then talk about why people like to use RStudio to write in R.\n\nWe'll discuss ways to use R and RStudio at CHOP, and we'll also talk about an online option called Posit dot cloud.\n:::\n\n## R is a Programming Language {.smaller}\n\nR is a programming language.  This is what it looks like:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ingest data from REDCap\narcus_101_feedback_token <- readr::read_file(\"secrets/quick_arcus_101_feedback_token.txt\")\narcus_101_feedback <- get_data(arcus_101_feedback_token)\n\n# Get raw data and add the labels back in the correct order, show change over time\narcus_101_feedback_updated <- arcus_101_feedback %>%\n  \n  # We don't need the \"completeness\" value\n  select(-arcus_101_effectiveness_complete) %>%\n  \n  # Transform all the \"knowledge\" questions\n  mutate(across(starts_with(\"knowledge\"),\n                ~ factor(.x, levels = c(\"Very little knowledge\", \n                                      \"Some knowledge\", \n                                      \"Lots of knowledge\", \n                                      \"Expert\"))),\n         \n         # Transform all the \"opinion\" questions (pre)\n         opinion_pre = factor(opinion_pre, \n                              levels = c(\"Largely negative, I didn't think Arcus was useful or helpful to CHOP.\", \n                                         \"Somewhat negative, I had doubts about how useful or helpful Arcus was to CHOP.\", \n                                         \"Neutral, I didn't have a strong opinion.\",\n                                         \"Somewhat positive, I believed that Arcus was useful or helpful to CHOP.\", \n                                         \"Largely positive, I was certain that Arcus was useful or helpful to CHOP.\")),\n         \n         # Transform all the \"opinion\" questions (post)\n         opinion_post = factor(opinion_post, \n                              levels = c(\"Largely negative, I don't think Arcus is useful or helpful to CHOP.\", \n                                         \"Somewhat negative, I have doubts about how useful or helpful Arcus is to CHOP.\", \n                                         \"Neutral, I don't have a strong opinion.\",\n                                         \"Somewhat positive, I believe that Arcus is useful or helpful to CHOP.\", \n                                         \"Largely positive, I am certain that Arcus is useful or helpful to CHOP.\")),\n         \n         # Measure change (pre to post)\n         \n         knowledge_change = as.numeric(knowledge_post)-as.numeric(knowledge_pre),\n         opinion_change = as.numeric(opinion_post)-as.numeric(opinion_pre),\n         )\n\n# Make a bar chart showing pre-intervention knowledge\n\nggplot(arcus_101_feedback_updated) +\n         geom_bar(aes(x=knowledge_pre)) +\n  scale_x_discrete(drop=FALSE) +\n  labs(title = \"Knowledge of Arcus Before 101\") +\n  xlab(\"\")\n\n# Save this graph for later\n\nggsave(\"figures/pre_101_knowledge.png\")\n```\n:::\n\n\n  \n::: notes\nOK, if you've never seen any R language before, here's an example.  This is real R code that we use in my team.  This is just to show you what R looks like, so you get an idea.  \n\nYou can see that there are some comments, here shown in grey, that describe what the code is doing.  As I scroll down, you can see what this code does. \n\nFirst, we're ingesting some data from REDCap.  It's a survey we give related to a webinar we offer twice a month, called Arcus 101.  We want to measure our effectiveness, and we analyze this survey data using R.\n\nSo we ingest the data,\n\nIn line 9, we get rid of a value we don't need.\n\nThen we do some transformation.  We want to make sure R knows the proper order of our Likert scale values.  We have a set of values that has to do with knowledge, a set of values that has to do with opinion before our talk, with verbs in the past tense, and a set of values that has to do with opinion after our talk, which has verbs in the present tense.\n\nIn lines 36 and 37, we do a little math to measure change.\n\nThen we make a data visualization in lines 42 through 46 -- a bar graph -- and in line 50, we save this as a file we can use later.\n\nThis is just a snippet of actual code that we use in our team, just in case you've never seen R code before.\n\n:::\n\n## R is a Programming Language  {.smaller}\n\nR is a **statistical** programming language.\n\n* Like other programming languages (Javascript, Python, C++):\n\n  - R has specific syntax rules\n  - R gives error messages that you might have to search online for\n  - R has online communities that can help you learn (Stack Overflow, etc.)\n  \n* Unlike other programming languages:\n\n  - R was written **specifically** for statistical data analysis\n\n::: notes\nIf you ever took programming in school, whether that was BASIC or Pascal or C++ or Python, you will have a little bit of an advantage in learning R.  That's because R is a programming language.  Like other programming languages, R has specific syntax rules.  When you make mistakes, which is very very normal,  R will give you error messages that might seem cryptic at first until you get used to them.  Because learning to write a programming language can be hard, there are lots of online communities where people help each other out and ask questions.  R is similar to other programming languages in these ways.\n\nBut R is special as a programming language when we're talking about data.  While all programming languages **can** work with data, R was designed specifically for data analysis.  That means that that R is really quite good for data analysis, and it's not good for, say, programming robots. \n\n:::\n\n## Why Does This Matter?  {.smaller}\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"50%\"}\n\nWhich is a better tool?\n\n* A multi-tool (like a Swiss Army knife)\n* A mostly mono-task tool (like a cherry pitter)\n\nIt depends!  R is more focused / narrow... which can be good for beginners.\n\n::: \n::: {.column .tiny-text width=\"50%\"}\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Stainless_2CR_Multi-tool.jpg/512px-Stainless_2CR_Multi-tool.jpg?20170104132808){.bordered}\n\"Stainless 2CR Multi-tool\", Santeri Viinamäki, CC BY-SA 4.0, via Wikimedia Commons\n:::\n:::\n\n\n::: notes\n\nThere are programming languages that can do lots of stuff reasonably well.  Python is one.  Python is like a multi-tool.  With Python, you can make a website, or program a robot, or analyze data, or make a desktop application, or build an API.  You can get lots of different attachments, or libraries, to make the language more useful.  That's great if you're an experienced programmer and you need to do lots of different things.  It seems like a multi-purpose language would be the best choice for most people, right?\n\nWell, one thing to consider is what happens when you're a beginner. When you're learning something for the first time, it can be a lot easier to learn how to use a tool that mostly just does one thing.  If you're using code to do data analysis, and you're searching online for tutorials, it can be very frustrating to watch a bunch of tutorials that end up being about how to program robots or do other things that you don't care about.  Because R is a very tightly scoped solution to the problem of data analysis, everyone who is posting about R on the internet is interested in data analysis, and you'll have a lot easier time finding answers to your questions about how to use it.\n\nSo, to answer the question on this slide... which is better?  It depends!  We think -- and it's just our opinion -- that for people who have to do lots of different things, a multi-tool, a language that has lots of uses, like Python, might be a better fit.  And we suspect that for beginners, a very focused tool like the R language might be a better fit as you get started.\n:::\n\n## Why Not Just Use Excel? {.smaller}\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"50%\"}\n\n\"Why even write code? Point and click is so much easier!\"\n\nThese can be useful:\n\n* Excel\n* Point and click statistical analysis software (e.g. SPSS, SAS)\n\nBut they can also be:\n\n* Very manual / lots of steps you have to explain\n* Costly\n\nOne potential answer?  **Scripts!**\n::: \n\n::: {.column .small-text width=\"50%\"}\n![](media/himelblog_excel.png)\n\n::: {.small-text}\nUsed with permission by Ed Himelblau. See his work or subscribe to his newsletter at <https://www.himelblau.com/>\n:::\n:::\n\n:::\n\n::: notes\n\nHere's a question you might be asking:\n\nWhy do people even bother to learn how to write code to analyze data?  After all, there are software programs out there that allow you to use point and click to analyze your data.  Many people use Excel for day-to-day data analysis, and for scientific-grade statistical analysis, there's always programs like SPSS or SAS or Stata.\n\nAnd we think that a lot of this depends on how often you're going to do a particular analysis and if you have to share it, and with whom.\n\nIf you're going to do something once, or very infrequently, and it's just for you or for a few people, for example, let's say it's your annual budget, just do a spreadsheet in Excel.  No need to write code to do a one-off thing.\n\nHowever, if you're going to need to repeat your analysis over and over again, or have someone else do it, think about the steps you take.  Will it be hard to describe exactly what cell to put data in, and how to click and drag the values in just the right way?  If there are lots of steps and doing things manually is error prone, hard to describe, or just plain annoying, you might not actually write down your steps.  You might think, \"I'll remember this\", or \"It'll be obvious to me later.\"  Spoiler alert: it might not be!  In a case of lots of steps, you might be better off writing a script.\n\nAlso, if you're going to be sharing your materials beyond your team, you have to think about cost.  Excel costs, what, maybe $100?  I'm not sure.  But other software like SAS or Matlab or SPSS can cost hundreds or thousands of dollars, and if you are using that software and sharing your files with someone who doesn't have the program, you may be making their life complicated.  One of the great things about R is that it's a free, open source language that people around the world use.  It's very popular and anyone can download and use it for free.\n\n:::\n\n## Scripts {.smaller}\n\nIn data analysis, scripts are a series of computer code instructions that handle things like:\n\n* Ingesting data\n* Preparing data\n* Doing descriptive statistics\n* Conducting statistical tests\n* Creating models \n* Saving interim datasets\n* Creating data visualizations\n* Communicating information\n\n::: notes\n\nScripts, in this context, are computer code that allow you do do things like:\n\n* Ingesting data: for example, bringing in a .csv file or downloading the latest data from REDCap.\n* Preparing data.  This could be something like removing outliers or combining data from two or more sources.\n* Reporting statistical characteristics.  Maybe you want to find quartiles or median values for your data.\n* Conducting statistical tests.  If you do research, you might need to do something like a two-sample t-tests or measure Cohen's effect size.\n* Creating models.  Maybe you want to create a linear model that would allow you to predict future performance, given what you know from current data.\n* Saving interim datasets.  Perhaps you want to save a deidentified version of data, or a cleaned up version for senior leadership.\n* Creating data visualizations like scatter plots or box plots\n* Communicating information like making a dashboard for leadership or a table for a scientific publication.\n\nR allows you to write a script where you instruct the computer in how to do each step of this process.  \n\nWriting a **script** in a coding language like R is hard, but once it's done, you can have a script that does all the steps of your analysis without having any manual intervention.  That means you can execute it again later (or someone else can), and all that hard work pays off.\n:::\n\n\n## Why Scripts? {.smaller}\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"60%\"}\nIn science, we've been hearing a lot about the \"reproducibility crisis\".\n\nIt's hard to re-do other people's analyses... both for checking their work and for trying it in a new situation.  This is bad for science! \n\nOne of the most important reasons to learn R is to improve the **reproducibility** of your work. One of the most powerful aspects of working in the R environment is that it makes it straightforward to produce **reproducible data analyses**, which will reduce risk and make \"future you\" much happier.\n\n::: \n::: {.column .small-text width=\"40%\"}\n![](media/himelblog_protocol.png)\n\n:::{.small-text}\nUsed with permission by Ed Himelblau. See his work or subscribe to his newsletter at <https://www.himelblau.com/>\n:::\n\n:::\n:::\n\n\n::: notes\n\nI'm going to talk about the reproducibility crisis here.  Give me a thumbs up emoji if you're already familiar with this term.  \n\nNow, I know not everyone on this call might work principally in research, so I want to start by saying that one of the important things in science is that we have to repeat experiments to see if we see things happen over and over again. And that's because sometimes we see experimental results that are just coincidences or luck.\n\nIf we see that a certain type of therapy reduces anxiety in one study, we want to see that it works again and again.  We want to try it in adolescents, and in adults, and in city kids, and in rural communities, and we'd like to see it work in English speakers and maybe outside of the USA, and in groups with different socio-economic backgrounds, etc.  That's part of how science works.  We repeat experiments.  \n\nWe try the same things in different populations.  We want to see if the same drug works similarly in men and in women, and in people of various weights, and different comorbid conditions.  \n\nIt's helpful if different scientists in different organizations and in different parts of the world can show that they're seeing the same effects.  It means increasing scientific evidence.\n\nThe \"reproducibility crisis\" refers to the problem in peer-reviewed research in which studies **cannot** be redone, cannot be reproduced, maybe because of insufficient information on how to redo them, or maybe because of preventable problems in the initial research. \n\nScience usually has a long, multi-step process for gathering and analyzing data, and any multi-step process can be prone to error.  It can be prone to error even when you yourself are doing the exact same analysis three months later when a new batch of data comes in!  And it's even more error prone when someone who isn't you is trying to understand your notes and how you did things.  \n\nThe cartoon on the right, which is by biologist and New Yorker cartoonist Ed Himelblau, shows scientists doing some very complex rituals as part of trying to reproduce an experiment.  I know the caption is quite small, so I'll read it.  It says, \"Do you ever wonder if every step in the protocol is absolutely necessary?\"\n\nThat's why having an automated script, which handles all of the steps without human intervention, can be really very helpful.  And now that we're facing an economy where we have to do more with less, the ability to automate things for free, without an expensive license, is really useful, especially if you want to share your findings with colleagues in lower-resourced settings.\n\nWe'll talk more about reproducibility in the second session of this two-webinar series, where we talk about literate statistical programming, so if this is interesting to you, please come back for the second talk!\n:::\n\n## R Vs RStudio\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"50%\"}\n![](media/r_logo.png){.two-thirds}\n\n\n\n:::\n\n::: {.column .small-text width=\"50%\"}\n![](media/rstudio_logo.png){.half}\n\n:::\n\n\n:::\n\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"50%\"}\n**R** Programming language for data analysis\n:::\n\n::: {.column .small-text width=\"50%\"}\n**RStudio** Integrated development environment (IDE)\n:::\n\n:::\n\n\n::: notes\n\nHopefully you understand why sometimes, for at least some people, working with R to write scripts for data analysis makes sense.  It can save time and make their work more reproducible and shareable in the long run.  Now I want to distinguish between two very similar terms.\n\nThe first is **R**. R is a statistical programming language that's great for doing data analysis. We've already talked about a few things that make R useful:\n\n-   R was built specifically for statistical data analysis, so it's got a friendly and focused user community and lots of great online resources for learning.\n-   R is **open source**, which means that it is \"free\" in two ways -- in the meaning of having **no cost** and also in that can be used widely **without intellectual property concerns or licensing restrictions**.\n-   R makes it possible to work with data and build scripts that do lots of things, from ingesting data to building data visualizations.\n\nSo that's R, it's a language with a lot of benefits.\n\nThen, there's **RStudio**. RStudio was the original name of a company as well as the name of a piece of software the company makes (and there is a free and a paid version of this software). A couple of years ago, the company changed its name from RStudio to Posit, but they kept the old name on at least some of their software.\n\nYou can think of RStudio (the software) as a fancy text editor for writing R code. The technical term for a fancy text editor for writing code is \"Integrated Development Environment\", or I-D-E. You can run RStudio on Mac, Windows, or Linux. It can run on a local computer like your laptop, or on a server that is accessed using a web browser.\n\nYou don't have to use RStudio to write R, but it makes it a lot easier.  Think about typing a paper in Microsoft Word.  You don't need to use Word, necessarily.  If you didn't have Microsoft Word, you could write down your thoughts in Notepad, or in a blank Outlook email, or in the Notes app on your phone.  But Microsoft Word has lots of add-ons, like spell-check and word count and formatting that make it much more pleasant to write a paper there, rather than in the notes app on your phone!\n\n:::\n\n## Using R Alone vs With RStudio\n\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"45%\"}\n![](media/r_application.png)\n:::\n::: {.column .small-text width=\"55%\"}\n![](media/rstudio_application.png)\n:::\n:::\n\n::: {.columns .v-center-container}\n::: {.column .small-text width=\"50%\"}\n![](media/r_logo.png){width=\"100px\"}\n:::\n\n::: {.column .small-text width=\"50%\"}\n![](media/rstudio_logo.png){width=\"100px\"}\n:::\n\n\n:::\n\n\n::: notes\n\nNow, you can download the R language by itself, and it comes with a little application for writing R code.  It's not a terrible application, but it doesn't have many features.  On the left, you can see what the R application by itself looks like.\n\nPosit is a company that is separate from the people who are in charge of the R language, but they make a fantastic piece of software that we strongly recommend, called RStudio.  It's free, and you can see RStudio on the right.\n\nRStudio has lots of included features that make working in R a lot easier, and most everyone who works in R uses RStudio to write their code.  We highly recommend you use it!  \n\nIn the next slide, I'll show you an animation of what working with just plain R looks like, so you can get a baseline feel for what that's like, and then in the following slide I'll show you what it can look like to work with RStudio, so you can appreciate the difference.\n\n:::\n\n## The R App \n\n![](media/r_app_example.gif)\n\n::: notes\nOK, so here I'm going to run code on the left and it will be executed on the right.  You can execute code using a keyboard shortcut or by using the dropdown menu.  You can see that graphics appear in a separate window.  And I'm creating a few different graphics, and those are all creating files, somewhere in my folder that contains this code.  If I want to see the folder that contains them all, I have to open a new program.  I use a Mac, so in my case that's Finder, and I can see those files.  Finally, I can use the Help function, and a separate window opens up.  That's the R app.  It's not terrible, but it's not great, either.  And that graphic is just going to loop, so I'll go ahead to the next slide.\n\n:::\n\n\n## RStudio\n\n![](media/rstudio_app_example.gif)\n\n::: notes\nIn RStudio, we can run these bits of code called code chunks here, and we can run them one at a time, or we can run \"all chunks above\", if we want to just run a lot of code chunks in a row.\n\nWe can see the plots in a couple of different places in RStudio, depending on our preferences, and we can see our files listed out right in RStudio, in that lower right pane, and click on our files to open them and see them in a file viewer.\n\nHelp is also located in a pane in the same window, which can be helpful.\n\nI can also take a look at the data I've ingested and get an idea of what my survey data looks like.\n\nFinally, I can also create a report by \"rendering\" my code and making an HTML report that includes my code, some sentences and headers I wrote that help describe my code, and shows the graphs I made.  This kind of report creation is a big reason why some people use RStudio.  RStudio supports the creation of dashboards and reports that help you not only analyze your data, but communicate what you've discovered to different kinds of audiences.\n\nIf you want to learn more about that, come to the next talk in this series, called literate statistical programming.\n\n:::\n\n## RStudio: Runs Lots of Places\n\n::: columns\n::: {.column .small-text width=\"33%\"}\n![](media/posit_logo_2024.png){.two-thirds}\n![](media/rstudio_cloud.png){.two-thirds}\n\n:::\n\n::: {.column .small-text width=\"33%\"}\n![](media/posit_workbench_logo.png){.two-thirds}\n![](media/rstudio_cloud.png){.two-thirds}\n:::\n\n::: {.column .small-text width=\"33%\"}\n![](media/rstudio_desktop.png) \n\n:::\n:::\n::: columns\n::: {.column .small-text width=\"33%\"}\n**Posit.cloud**\n\nHosted by Posit (in the cloud)\n:::\n\n::: {.column .small-text width=\"33%\"}\n**Posit Workbench**\n\nHosted by a company, on prem or in the cloud\n:::\n\n::: {.column .small-text width=\"33%\"}\n**RStudio Desktop**\n\nInstalled on your computer\n:::\n:::\n\n::: notes\nThere are several versions of RStudio:\n\n**Posit.Cloud** -- a version of the RStudio IDE that can be accessed from a web browser. It's hosted on a server by Posit, the company that makes this software.  It's literally at the URL posit.cloud!\n\n**Posit Workbench** -- a version of the RStudio IDE that can also be accessed from a web browser. But this time, it's hosted by a private business on a server, such as on a server your department runs that everyone in your team can access. \n\n**RStudio Desktop** -- a version of the RStudio IDE that is installed on a personal device like your desktop or laptop computer. This is what most people at CHOP use, installing it on their CHOP devices or using it on a virtual device like a VDI. \n\nIt's important to note that regardless of which version of RStudio that you use, you will be accessing the same general product.  All of these pretty much look and act the same.  So let's get into what you might need to do at CHOP if you want to work with R and RStudio!\n\n:::\n\n## Working with R at CHOP {.smaller}\n\n* We work with regulated data\n* IRB protocols and other regulations might override what I say here!\n* You can work with R and RStudio on a CHOP device\n  - You will **probably** have to request an install via a [service ticket](https://chop.service-now.com/esc?id=sc_cat_item&sys_id=fbf31958db4efe00de9e782bbf96192c)\n  - You'll need a cost center / grant / project number (even though there's no cost)\n  - Yes, this software has been used at CHOP before\n  - You'll need to give a reason (\"I need to analyze data for my job...\")\n  - You'll need to [provide the MAC address](https://kb.netgear.com/1005/How-do-I-find-my-device-s-MAC-address) of your computer\n  \n::: notes\n\nFirst, a few caveats to keep in mind.  At CHOP, we work with sensitive data, whether that's health care data, research data, or trade secrets about our enterprise.  We want to be careful.  You will almost certainly need to put in a ticket to get the right software installed on your CHOP device.  At this point, if you're not already following along in the slides, I'm going to really encourage you to grab this slide link because this slide and the next will have important information that will be useful for you when you decide to work with R and RStudio.  I will also point out that I do not work for DTS and I cannot approve or install software for you... you have to go through the formal channels here and I don't have any shortcuts!\n\nEven though all of these software are free, you'll need a Cost Center (or grant fund) to add to your request.  Get that from your manager, administrative staff, or other leadership within your area.  There will be no charge, but DTS uses this information for tracking resource utilization.  You'll be asked if this is software that's already in use at CHOP -- it certainly is.  You'll be asked to provide a justification, and that's usually that you need this to do data analysis for your job.  And finally, you'll have to provide information about your workstation, including the MAC address of your computer.\n:::\n  \n## What To Get Installed {.smaller}\n\nWhat I recommend you install / [get installed](https://chop.service-now.com/esc?id=sc_cat_item&sys_id=fbf31958db4efe00de9e782bbf96192c) on your own CHOP device:\n\n* [R](https://lib.stat.cmu.edu/R/CRAN/) -- the language we use to clean, analyze, and visualize data \n* [RStudio Desktop](https://posit.co/download/rstudio-desktop/) -- an IDE for writing R \n* [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) -- version control software that will allow you to easily get the latest version of our course materials and will also be helpful for tracking changes in your own projects\n* [GitHub Desktop](https://docs.github.com/en/desktop/installing-and-authenticating-to-github-desktop/installing-github-desktop) -- a helper, or \"client\" software that makes working with Git easier\n\n\n::: notes\nWe've already talked about R and RStudio, but I also highly recommend getting Git and GitHub Desktop installed as well.  They work really well with RStudio, and even if you're not ready to work with version control software now, you might want to work with these programs in the future, so it can be helpful to have everything installed all at once.  Each of these links can take you to more information about installing these programs, which can be helpful for talking to DTS or your boss.\n\n:::\n\n\n## Researchers ONLY at CHOP {.smaller}\n\n(You'll need a **research** cost center to refer to for most of these)\n  \n* If you work with the [High Performance Compute cluster](https://www.research.chop.edu/services/respublica-access-request) (HPC or Respublica), you can request an RStudio session by logging in to [Interactive Apps](https://respublica-web2.research.chop.edu/pun/sys/dashboard/batch_connect/sessions) and choosing RStudio.\n* You can [request a VDI](https://www.research.chop.edu/services/beyondchopedu-access) that includes RStudio.\n* You can [request an Arcus lab](https://support.arcus.chop.edu/servicedesk/customer/portal/6/create/307) for a well-defined research project you're planning.  The Arcus lab includes RStudio.\n\n::: notes\nIf you're a researcher at CHOP, there are additional places you might want to use R and RStudio.  And keep in mind, I work on the research side, so this is what I know best.  If you're on the clinical or operational side of CHOP, or you work for Foundation, and there's something about working with R and RStudio on your side that I've omitted, please let me know so I can update the slides!\n\nI won't go into these in detail, but each of these are links that take you to more information.  As a researcher, you can request access to the HPC, also known as Respublica, you can request a VDI, or you can request an Arcus lab. All of these can be ways you can get access to R and RStudio without having to install them on your local computer.  And especially if you work with very big data, or you do complex, high-memory data modeling, you might **have** to use some of these resources, if your computer just doesn't have enough RAM to do the job.  But as always, please make sure that wherever you work with your data, you are in compliance with your IRB protocol and any other regulation.\n\n:::\n\n## Posit.Cloud (be careful!) {.smaller}\n\nYou can use R and RStudio using online services like [https://posit.cloud](https://posit.cloud).  \n\nPosit.cloud is a great place for learning or practice with public datasets, BUT is not a safe or compliant place to put your regulated data.\n\n::: notes\n\nWhen we teach R and RStudio, it can be next to impossible to deal with everyone's different kinds of installation issues while they're trying to get set up and deal with IS, get issues ironed out with their computers and their access permissions, etc. \n\nThat's why we usually have brand new students use Posit.cloud to learn R and RStudio.  Posit.cloud is an online, cloud based service provided by Posit, the company that makes the RStudio software.  It's really good and reliable and it has a very generous free tier!  It means that as teachers we can concentrate on our learners really acquiring the skills around R and RStudio, without being bogged down by the fact that some people have Macs, some have PCs, some have admin rights, some don't, some have R installed, some don't, some have a very old version of R and they can't update it, and so on.  Using Posit.cloud makes things a lot easier for teachers and learners.\n\nHOWEVER!  Posit is absolutely NOT an appropriate place for regulated health care data.  It's for practicing and learning using public datasets.  If you're going to use R for CHOP data, you might benefit from **learning** R and RStudio using Posit.cloud but at the same time start the process of getting R and RStudio installed on your CHOP device so that you can transfer those skills to real-life work right away.  Depending on your operating system and what you already have installed, this might be very smooth, or you might have to troubleshoot this a few times with DTS or RIS, so be prepared to be patient.\n:::\n\n## Q&A / Was This Effective? {.smaller}\n\nAs you can tell from our data analysis, we like to measure our effectiveness.\n\nGoals:\n\n* Be able to describe the difference between R and RStudio\n* Be able to give one advantage for using scripts written in R for data analysis\n* Have a concrete next step for obtaining access to R and RStudio at CHOP\n\n\n::: notes\n\nNow, this is not the final slide, but we're a group that likes to measure our effectiveness and make changes based on what we learn.  So before we do questions and answers, we like to make sure to give our learners a poll to see if we made a good use of your time.  We're going to ask if we were effective in reaching our goals today, and those goals are on the screen in order to help you answer that question.  Once you answer that poll, feel free to type a question into chat or come off mute and ask to clarify anything I can explain a bit better.  I'll stop our session of Q&A with about 5 minutes to spare because I do have just a couple of finishing slides I want to show.\n\n:::\n\n\n## Homework {.smaller}\n\nIf you want, totally optional additional learning:\n\n| Module       | Description       | Duration |\n|--------------|---------------|----|\n| [Learning to Learn Data Science](https://liascript.github.io/course/?https://raw.githubusercontent.com/arcus/education_modules/main/learning_to_learn/learning_to_learn.md#1) | Discover how learning data science is different than learning other subjects.| 20 mins |\n| [Reproducibility, Generalizability, and Reuse](https://liascript.github.io/course/?https://raw.githubusercontent.com/arcus/education_modules/main/reproducibility/reproducibility.md#1) | This module provides learners with an approachable introduction to the concepts and impact of research reproducibility, generalizability, and data reuse, and how technical approaches can help make these goals more attainable. | 60 min |\n\n::: notes\n\nOK, as we get close to the end, I know that for some people, this topic ignited a bit of excitement about the ideas around learning how to code or learning more about reproducibility.  If that's you, we have a couple of resources here that you might enjoy, but you absolutely do not have to use these to be able to enjoy and profit from the next session of this series.  \n::::\n\n## Acknowledgements {.smaller}\n\n* R User Group leadership, especially Stephan Kadauke\n* Former learners at CHOP, Penn, Drexel, University of Botswana\n* DART study participants and pilots around the world\n* Ed Himelblau\n* You!\n\n::: notes\n\nWe want to thank the people that contributed to this work.  R User group leaders, especially Stephen [shte-fan] Kadauke [cud-awk-ey] created some of the materials that we started with years ago that have changed over time to take on this current format.  We're grateful to all the students at CHOP and beyond who have taken R workshops and given us valuable feedback that has improved our approach, especially our DART study participants.  We really enjoy the humor and science of Ed Himelblau and are grateful for his generosity in supporting our work with his art.  And, of course, thank you, our participants today! \n\n:::\n\n## Next Session\n\nLiterate Statistical Programming (DATES HERE)\n\n  * Review of R and RStudio\n  * Literate programming is a programming paradigm\n  * Research reproducibility reminders\n  * Quarto documents\n  * Next steps\n  \n::: notes\nFinally, if you want to attend the next talk in this two-webinar series, we'll be talking about Literate Statistical Programming, and here are some of the topics we'll talk about next time.  \n\nThanks so much for your time today, and have a great rest of your day!\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}